#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Repository
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="DoorPhone")]
	public partial class DoorPhoneDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Определения метода расширяемости
    partial void OnCreated();
    partial void InsertSubscribers(Subscribers instance);
    partial void UpdateSubscribers(Subscribers instance);
    partial void DeleteSubscribers(Subscribers instance);
    partial void InsertPaymentLog(PaymentLog instance);
    partial void UpdatePaymentLog(PaymentLog instance);
    partial void DeletePaymentLog(PaymentLog instance);
    #endregion
		
		public DoorPhoneDataContext() : 
				base(global::Repository.Properties.Settings.Default.DoorPhoneConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DoorPhoneDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DoorPhoneDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DoorPhoneDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DoorPhoneDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Subscribers> Subscribers
		{
			get
			{
				return this.GetTable<Subscribers>();
			}
		}
		
		public System.Data.Linq.Table<PaymentLog> PaymentLog
		{
			get
			{
				return this.GetTable<PaymentLog>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Subscribers")]
	public partial class Subscribers : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _LastName;
		
		private string _FirstName;
		
		private string _MiddleName;
		
		private string _Street;
		
		private string _HouseNum;
		
		private string _RoomNum;
		
		private string _TelephoneNumber;
		
		private string _MailAddress;
		
		private EntitySet<PaymentLog> _PaymentLog;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnMiddleNameChanging(string value);
    partial void OnMiddleNameChanged();
    partial void OnStreetChanging(string value);
    partial void OnStreetChanged();
    partial void OnHouseNumChanging(string value);
    partial void OnHouseNumChanged();
    partial void OnRoomNumChanging(string value);
    partial void OnRoomNumChanged();
    partial void OnTelephoneNumberChanging(string value);
    partial void OnTelephoneNumberChanged();
    partial void OnMailAddressChanging(string value);
    partial void OnMailAddressChanged();
    #endregion
		
		public Subscribers()
		{
			this._PaymentLog = new EntitySet<PaymentLog>(new Action<PaymentLog>(this.attach_PaymentLog), new Action<PaymentLog>(this.detach_PaymentLog));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NChar(20) NOT NULL", CanBeNull=false)]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MiddleName", DbType="NChar(20)")]
		public string MiddleName
		{
			get
			{
				return this._MiddleName;
			}
			set
			{
				if ((this._MiddleName != value))
				{
					this.OnMiddleNameChanging(value);
					this.SendPropertyChanging();
					this._MiddleName = value;
					this.SendPropertyChanged("MiddleName");
					this.OnMiddleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Street", DbType="NChar(20) NOT NULL", CanBeNull=false)]
		public string Street
		{
			get
			{
				return this._Street;
			}
			set
			{
				if ((this._Street != value))
				{
					this.OnStreetChanging(value);
					this.SendPropertyChanging();
					this._Street = value;
					this.SendPropertyChanged("Street");
					this.OnStreetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HouseNum", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string HouseNum
		{
			get
			{
				return this._HouseNum;
			}
			set
			{
				if ((this._HouseNum != value))
				{
					this.OnHouseNumChanging(value);
					this.SendPropertyChanging();
					this._HouseNum = value;
					this.SendPropertyChanged("HouseNum");
					this.OnHouseNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoomNum", DbType="NChar(10)")]
		public string RoomNum
		{
			get
			{
				return this._RoomNum;
			}
			set
			{
				if ((this._RoomNum != value))
				{
					this.OnRoomNumChanging(value);
					this.SendPropertyChanging();
					this._RoomNum = value;
					this.SendPropertyChanged("RoomNum");
					this.OnRoomNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TelephoneNumber", DbType="NChar(11)")]
		public string TelephoneNumber
		{
			get
			{
				return this._TelephoneNumber;
			}
			set
			{
				if ((this._TelephoneNumber != value))
				{
					this.OnTelephoneNumberChanging(value);
					this.SendPropertyChanging();
					this._TelephoneNumber = value;
					this.SendPropertyChanged("TelephoneNumber");
					this.OnTelephoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MailAddress", DbType="NChar(40)")]
		public string MailAddress
		{
			get
			{
				return this._MailAddress;
			}
			set
			{
				if ((this._MailAddress != value))
				{
					this.OnMailAddressChanging(value);
					this.SendPropertyChanging();
					this._MailAddress = value;
					this.SendPropertyChanged("MailAddress");
					this.OnMailAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Subscribers_PaymentLog", Storage="_PaymentLog", ThisKey="Id", OtherKey="Id_person")]
		public EntitySet<PaymentLog> PaymentLog
		{
			get
			{
				return this._PaymentLog;
			}
			set
			{
				this._PaymentLog.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PaymentLog(PaymentLog entity)
		{
			this.SendPropertyChanging();
			entity.Subscribers = this;
		}
		
		private void detach_PaymentLog(PaymentLog entity)
		{
			this.SendPropertyChanging();
			entity.Subscribers = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PaymentLog")]
	public partial class PaymentLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PaymentNum;
		
		private int _Id_person;
		
		private System.DateTime _firstPeriod;
		
		private System.DateTime _secondPeriod;
		
		private System.DateTime _todayData;
		
		private EntityRef<Subscribers> _Subscribers;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPaymentNumChanging(int value);
    partial void OnPaymentNumChanged();
    partial void OnId_personChanging(int value);
    partial void OnId_personChanged();
    partial void OnfirstPeriodChanging(System.DateTime value);
    partial void OnfirstPeriodChanged();
    partial void OnsecondPeriodChanging(System.DateTime value);
    partial void OnsecondPeriodChanged();
    partial void OntodayDataChanging(System.DateTime value);
    partial void OntodayDataChanged();
    #endregion
		
		public PaymentLog()
		{
			this._Subscribers = default(EntityRef<Subscribers>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentNum", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PaymentNum
		{
			get
			{
				return this._PaymentNum;
			}
			set
			{
				if ((this._PaymentNum != value))
				{
					this.OnPaymentNumChanging(value);
					this.SendPropertyChanging();
					this._PaymentNum = value;
					this.SendPropertyChanged("PaymentNum");
					this.OnPaymentNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_person", DbType="Int NOT NULL")]
		public int Id_person
		{
			get
			{
				return this._Id_person;
			}
			set
			{
				if ((this._Id_person != value))
				{
					if (this._Subscribers.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnId_personChanging(value);
					this.SendPropertyChanging();
					this._Id_person = value;
					this.SendPropertyChanged("Id_person");
					this.OnId_personChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_firstPeriod", DbType="Date NOT NULL")]
		public System.DateTime firstPeriod
		{
			get
			{
				return this._firstPeriod;
			}
			set
			{
				if ((this._firstPeriod != value))
				{
					this.OnfirstPeriodChanging(value);
					this.SendPropertyChanging();
					this._firstPeriod = value;
					this.SendPropertyChanged("firstPeriod");
					this.OnfirstPeriodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_secondPeriod", DbType="Date NOT NULL")]
		public System.DateTime secondPeriod
		{
			get
			{
				return this._secondPeriod;
			}
			set
			{
				if ((this._secondPeriod != value))
				{
					this.OnsecondPeriodChanging(value);
					this.SendPropertyChanging();
					this._secondPeriod = value;
					this.SendPropertyChanged("secondPeriod");
					this.OnsecondPeriodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_todayData", DbType="Date NOT NULL")]
		public System.DateTime todayData
		{
			get
			{
				return this._todayData;
			}
			set
			{
				if ((this._todayData != value))
				{
					this.OntodayDataChanging(value);
					this.SendPropertyChanging();
					this._todayData = value;
					this.SendPropertyChanged("todayData");
					this.OntodayDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Subscribers_PaymentLog", Storage="_Subscribers", ThisKey="Id_person", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Subscribers Subscribers
		{
			get
			{
				return this._Subscribers.Entity;
			}
			set
			{
				Subscribers previousValue = this._Subscribers.Entity;
				if (((previousValue != value) 
							|| (this._Subscribers.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Subscribers.Entity = null;
						previousValue.PaymentLog.Remove(this);
					}
					this._Subscribers.Entity = value;
					if ((value != null))
					{
						value.PaymentLog.Add(this);
						this._Id_person = value.Id;
					}
					else
					{
						this._Id_person = default(int);
					}
					this.SendPropertyChanged("Subscribers");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
